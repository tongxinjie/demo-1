package com.example.demo.pojo;

import java.util.ArrayList;
import java.util.List;
import java.util.Date;

public class ChatExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table chatlist
	 * @mbg.generated  Wed Jul 31 16:25:52 CST 2019
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table chatlist
	 * @mbg.generated  Wed Jul 31 16:25:52 CST 2019
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table chatlist
	 * @mbg.generated  Wed Jul 31 16:25:52 CST 2019
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table chatlist
	 * @mbg.generated  Wed Jul 31 16:25:52 CST 2019
	 */
	public ChatExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table chatlist
	 * @mbg.generated  Wed Jul 31 16:25:52 CST 2019
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table chatlist
	 * @mbg.generated  Wed Jul 31 16:25:52 CST 2019
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table chatlist
	 * @mbg.generated  Wed Jul 31 16:25:52 CST 2019
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table chatlist
	 * @mbg.generated  Wed Jul 31 16:25:52 CST 2019
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table chatlist
	 * @mbg.generated  Wed Jul 31 16:25:52 CST 2019
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table chatlist
	 * @mbg.generated  Wed Jul 31 16:25:52 CST 2019
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table chatlist
	 * @mbg.generated  Wed Jul 31 16:25:52 CST 2019
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table chatlist
	 * @mbg.generated  Wed Jul 31 16:25:52 CST 2019
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table chatlist
	 * @mbg.generated  Wed Jul 31 16:25:52 CST 2019
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table chatlist
	 * @mbg.generated  Wed Jul 31 16:25:52 CST 2019
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table chatlist
	 * @mbg.generated  Wed Jul 31 16:25:52 CST 2019
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andIdIsNull() {
			addCriterion("id is null");
			return (Criteria) this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("id is not null");
			return (Criteria) this;
		}

		public Criteria andIdEqualTo(Integer value) {
			addCriterion("id =", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotEqualTo(Integer value) {
			addCriterion("id <>", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThan(Integer value) {
			addCriterion("id >", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("id >=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThan(Integer value) {
			addCriterion("id <", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThanOrEqualTo(Integer value) {
			addCriterion("id <=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdIn(List<Integer> values) {
			addCriterion("id in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotIn(List<Integer> values) {
			addCriterion("id not in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdBetween(Integer value1, Integer value2) {
			addCriterion("id between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotBetween(Integer value1, Integer value2) {
			addCriterion("id not between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andWechatidIsNull() {
			addCriterion("wechatid is null");
			return (Criteria) this;
		}

		public Criteria andWechatidIsNotNull() {
			addCriterion("wechatid is not null");
			return (Criteria) this;
		}

		public Criteria andWechatidEqualTo(String value) {
			addCriterion("wechatid =", value, "wechatid");
			return (Criteria) this;
		}

		public Criteria andWechatidNotEqualTo(String value) {
			addCriterion("wechatid <>", value, "wechatid");
			return (Criteria) this;
		}

		public Criteria andWechatidGreaterThan(String value) {
			addCriterion("wechatid >", value, "wechatid");
			return (Criteria) this;
		}

		public Criteria andWechatidGreaterThanOrEqualTo(String value) {
			addCriterion("wechatid >=", value, "wechatid");
			return (Criteria) this;
		}

		public Criteria andWechatidLessThan(String value) {
			addCriterion("wechatid <", value, "wechatid");
			return (Criteria) this;
		}

		public Criteria andWechatidLessThanOrEqualTo(String value) {
			addCriterion("wechatid <=", value, "wechatid");
			return (Criteria) this;
		}

		public Criteria andWechatidLike(String value) {
			addCriterion("wechatid like", value, "wechatid");
			return (Criteria) this;
		}

		public Criteria andWechatidNotLike(String value) {
			addCriterion("wechatid not like", value, "wechatid");
			return (Criteria) this;
		}

		public Criteria andWechatidIn(List<String> values) {
			addCriterion("wechatid in", values, "wechatid");
			return (Criteria) this;
		}

		public Criteria andWechatidNotIn(List<String> values) {
			addCriterion("wechatid not in", values, "wechatid");
			return (Criteria) this;
		}

		public Criteria andWechatidBetween(String value1, String value2) {
			addCriterion("wechatid between", value1, value2, "wechatid");
			return (Criteria) this;
		}

		public Criteria andWechatidNotBetween(String value1, String value2) {
			addCriterion("wechatid not between", value1, value2, "wechatid");
			return (Criteria) this;
		}

		public Criteria andHostIsNull() {
			addCriterion("host is null");
			return (Criteria) this;
		}

		public Criteria andHostIsNotNull() {
			addCriterion("host is not null");
			return (Criteria) this;
		}

		public Criteria andHostEqualTo(String value) {
			addCriterion("host =", value, "host");
			return (Criteria) this;
		}

		public Criteria andHostNotEqualTo(String value) {
			addCriterion("host <>", value, "host");
			return (Criteria) this;
		}

		public Criteria andHostGreaterThan(String value) {
			addCriterion("host >", value, "host");
			return (Criteria) this;
		}

		public Criteria andHostGreaterThanOrEqualTo(String value) {
			addCriterion("host >=", value, "host");
			return (Criteria) this;
		}

		public Criteria andHostLessThan(String value) {
			addCriterion("host <", value, "host");
			return (Criteria) this;
		}

		public Criteria andHostLessThanOrEqualTo(String value) {
			addCriterion("host <=", value, "host");
			return (Criteria) this;
		}

		public Criteria andHostLike(String value) {
			addCriterion("host like", value, "host");
			return (Criteria) this;
		}

		public Criteria andHostNotLike(String value) {
			addCriterion("host not like", value, "host");
			return (Criteria) this;
		}

		public Criteria andHostIn(List<String> values) {
			addCriterion("host in", values, "host");
			return (Criteria) this;
		}

		public Criteria andHostNotIn(List<String> values) {
			addCriterion("host not in", values, "host");
			return (Criteria) this;
		}

		public Criteria andHostBetween(String value1, String value2) {
			addCriterion("host between", value1, value2, "host");
			return (Criteria) this;
		}

		public Criteria andHostNotBetween(String value1, String value2) {
			addCriterion("host not between", value1, value2, "host");
			return (Criteria) this;
		}

		public Criteria andTimeIsNull() {
			addCriterion("time is null");
			return (Criteria) this;
		}

		public Criteria andTimeIsNotNull() {
			addCriterion("time is not null");
			return (Criteria) this;
		}

		public Criteria andTimeEqualTo(Date value) {
			addCriterion("time =", value, "time");
			return (Criteria) this;
		}

		public Criteria andTimeNotEqualTo(Date value) {
			addCriterion("time <>", value, "time");
			return (Criteria) this;
		}

		public Criteria andTimeGreaterThan(Date value) {
			addCriterion("time >", value, "time");
			return (Criteria) this;
		}

		public Criteria andTimeGreaterThanOrEqualTo(Date value) {
			addCriterion("time >=", value, "time");
			return (Criteria) this;
		}

		public Criteria andTimeLessThan(Date value) {
			addCriterion("time <", value, "time");
			return (Criteria) this;
		}

		public Criteria andTimeLessThanOrEqualTo(Date value) {
			addCriterion("time <=", value, "time");
			return (Criteria) this;
		}

		public Criteria andTimeIn(List<Date> values) {
			addCriterion("time in", values, "time");
			return (Criteria) this;
		}

		public Criteria andTimeNotIn(List<Date> values) {
			addCriterion("time not in", values, "time");
			return (Criteria) this;
		}

		public Criteria andTimeBetween(Date value1, Date value2) {
			addCriterion("time between", value1, value2, "time");
			return (Criteria) this;
		}

		public Criteria andTimeNotBetween(Date value1, Date value2) {
			addCriterion("time not between", value1, value2, "time");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table chatlist
	 * @mbg.generated  Wed Jul 31 16:25:52 CST 2019
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table chatlist
     *
     * @mbg.generated do_not_delete_during_merge Tue Jul 30 15:53:32 CST 2019
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}